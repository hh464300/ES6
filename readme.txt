1.  变量
		let  b = 10;
	特性
		1. 使用let 不能重复声明 也不能使用var重复声明
				let b = 10;
				let b = 100;//报错  --可以改值 但是不能重新声明
				var b = 100;//报错
		2. 没有预解析过程
				console.log(b);
				let b = 10;
		3. 块级作用域
				{
					let b = 10;
					console.log(b); //可以访问
				}
					console.log(b); //不能访问
				--暂存死区 
					声明之前无法访问
2. 常量
		--定义固定不变的量 如：配置文件(用户名 密码 数据的库名 密码 表等)
		不能被修改
		不能重新声明

		如果常量保存的值是一个对象，那么对象的属性值是可以被修改的。

3. 变量的解构赋值
		ES6允许按照一定模式，从数组和对象中取值，对变量进行复制，被称为解构。
		var [a,b,c] = [1,2,3];  顺序一一对应
		只要结构相同也可以解析
			var [a,b,c] = [1,[1,2,3],[4,5,6]];
		数组的解构
			var [a,b,c] = arr;
		对象的解构
			var {a,show,arr} = obj;
		作用： 
			函数return对象    接受的时候可以不用一个一个的赋值。
			值的交换
				var x = 1;var y = 2;
				1. 使用中间变量
				2. var [x,y] = [y,x];
4. 字符串
		1. 'abc'.repeat(3);  字符串重复
		2. 'abc'.codePointAt(0);获取码号
		3. 超级字符串`姓名：${obj.name}`
	扩展方法
		1. str.includes()  --存在返回true 不存在返回false
			参数一： 要查找的字符
			参数二： 起始位置   --查找重哪个位置开始
		2. startsWith(); 是不是首位
				 --返回true | false
		3. endsWith();   是不是尾部
				-- 返回true | false
5. 数值
	   ECMA6提供了二进制和八进制数值的新的写法，分别用前缀0b  和 0o表示

6. Math对象扩展
	Math.trunc()      将小数点去掉
	Math.sign()  判断是正数，负数， 0   -0
	Math.hypot() 勾股定理     (平方和的平方根)
